<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.springcloud.weibo.mapper.MessageMapper">
    <resultMap id="BaseResultMap"
               type="com.springcloud.weibo.pojo.Message">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="topic_id" jdbcType="INTEGER" property="topicId"/>
        <result column="create_date" jdbcType="TIMESTAMP"
                property="createDate"/>
        <result column="forwarding_count" jdbcType="INTEGER"
                property="forwardingCount"/>
        <result column="comments_count" jdbcType="INTEGER"
                property="commentsCount"/>
        <result column="likes_count" jdbcType="INTEGER"
                property="likesCount"/>
        <result column="isDel" jdbcType="VARCHAR" property="isdel"/>
        <result column="isPublic" jdbcType="VARCHAR"
                property="ispublic"/>
        <result column="uid" jdbcType="VARCHAR" property="uid"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.springcloud.weibo.pojo.Message">
        <result column="content" jdbcType="LONGVARCHAR"
                property="content"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value"
                                             item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria"
                     separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value}
                                    and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value"
                                             item="listItem" open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, title, topic_id, create_date, forwarding_count,
        comments_count,
        likes_count,
        isDel, isPublic, uid
    </sql>
    <sql id="Blob_Column_List">
        content
    </sql>
    <select id="selectByExampleWithBLOBs"
            parameterType="com.springcloud.weibo.pojo.MessageExample"
            resultMap="ResultMapWithBLOBs">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByExample"
            parameterType="com.springcloud.weibo.pojo.MessageExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey"
            parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from message
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey"
            parameterType="java.lang.Integer">
        delete from message
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample"
            parameterType="com.springcloud.weibo.pojo.MessageExample">
        delete from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert"
            parameterType="com.springcloud.weibo.pojo.Message">
        insert into message (id, title, topic_id,
        create_date,
        forwarding_count, comments_count,
        likes_count, isDel, isPublic,
        uid,
        content)
        values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR},
        #{topicId,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP},
        #{forwardingCount,jdbcType=INTEGER},
        #{commentsCount,jdbcType=INTEGER},
        #{likesCount,jdbcType=INTEGER},
        #{isdel,jdbcType=VARCHAR}, #{ispublic,jdbcType=VARCHAR},
        #{uid,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR})
    </insert>

    <!-- 此区域有做修改 useGeneratedKeys="true" keyProperty="id" -->
    <insert id="insertSelective"
            parameterType="com.springcloud.weibo.pojo.Message"
            useGeneratedKeys="true" keyProperty="id">
        insert into message
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="topicId != null">
                topic_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="forwardingCount != null">
                forwarding_count,
            </if>
            <if test="commentsCount != null">
                comments_count,
            </if>
            <if test="likesCount != null">
                likes_count,
            </if>
            <if test="isdel != null">
                isDel,
            </if>
            <if test="ispublic != null">
                isPublic,
            </if>
            <if test="uid != null">
                uid,
            </if>
            <if test="content != null">
                content,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="topicId != null">
                #{topicId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="forwardingCount != null">
                #{forwardingCount,jdbcType=INTEGER},
            </if>
            <if test="commentsCount != null">
                #{commentsCount,jdbcType=INTEGER},
            </if>
            <if test="likesCount != null">
                #{likesCount,jdbcType=INTEGER},
            </if>
            <if test="isdel != null">
                #{isdel,jdbcType=VARCHAR},
            </if>
            <if test="ispublic != null">
                #{ispublic,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                #{uid,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample"
            parameterType="com.springcloud.weibo.pojo.MessageExample"
            resultType="java.lang.Long">
        select count(*) from message
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update message
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.title != null">
                title = #{record.title,jdbcType=VARCHAR},
            </if>
            <if test="record.topicId != null">
                topic_id = #{record.topicId,jdbcType=INTEGER},
            </if>
            <if test="record.createDate != null">
                create_date = #{record.createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.forwardingCount != null">
                forwarding_count =
                #{record.forwardingCount,jdbcType=INTEGER},
            </if>
            <if test="record.commentsCount != null">
                comments_count =
                #{record.commentsCount,jdbcType=INTEGER},
            </if>
            <if test="record.likesCount != null">
                likes_count = #{record.likesCount,jdbcType=INTEGER},
            </if>
            <if test="record.isdel != null">
                isDel = #{record.isdel,jdbcType=VARCHAR},
            </if>
            <if test="record.ispublic != null">
                isPublic = #{record.ispublic,jdbcType=VARCHAR},
            </if>
            <if test="record.uid != null">
                uid = #{record.uid,jdbcType=VARCHAR},
            </if>
            <if test="record.content != null">
                content = #{record.content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExampleWithBLOBs" parameterType="map">
        update message
        set id = #{record.id,jdbcType=INTEGER},
        title =
        #{record.title,jdbcType=VARCHAR},
        topic_id =
        #{record.topicId,jdbcType=INTEGER},
        create_date =
        #{record.createDate,jdbcType=TIMESTAMP},
        forwarding_count =
        #{record.forwardingCount,jdbcType=INTEGER},
        comments_count =
        #{record.commentsCount,jdbcType=INTEGER},
        likes_count =
        #{record.likesCount,jdbcType=INTEGER},
        isDel =
        #{record.isdel,jdbcType=VARCHAR},
        isPublic =
        #{record.ispublic,jdbcType=VARCHAR},
        uid =
        #{record.uid,jdbcType=VARCHAR},
        content =
        #{record.content,jdbcType=LONGVARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update message
        set id = #{record.id,jdbcType=INTEGER},
        title =
        #{record.title,jdbcType=VARCHAR},
        topic_id =
        #{record.topicId,jdbcType=INTEGER},
        create_date =
        #{record.createDate,jdbcType=TIMESTAMP},
        forwarding_count =
        #{record.forwardingCount,jdbcType=INTEGER},
        comments_count =
        #{record.commentsCount,jdbcType=INTEGER},
        likes_count =
        #{record.likesCount,jdbcType=INTEGER},
        isDel =
        #{record.isdel,jdbcType=VARCHAR},
        isPublic =
        #{record.ispublic,jdbcType=VARCHAR},
        uid =
        #{record.uid,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective"
            parameterType="com.springcloud.weibo.pojo.Message">
        update message
        <set>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="topicId != null">
                topic_id = #{topicId,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="forwardingCount != null">
                forwarding_count = #{forwardingCount,jdbcType=INTEGER},
            </if>
            <if test="commentsCount != null">
                comments_count = #{commentsCount,jdbcType=INTEGER},
            </if>
            <if test="likesCount != null">
                likes_count = #{likesCount,jdbcType=INTEGER},
            </if>
            <if test="isdel != null">
                isDel = #{isdel,jdbcType=VARCHAR},
            </if>
            <if test="ispublic != null">
                isPublic = #{ispublic,jdbcType=VARCHAR},
            </if>
            <if test="uid != null">
                uid = #{uid,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKeyWithBLOBs"
            parameterType="com.springcloud.weibo.pojo.Message">
        update message
        set title = #{title,jdbcType=VARCHAR},
        topic_id = #{topicId,jdbcType=INTEGER},
        create_date =
        #{createDate,jdbcType=TIMESTAMP},
        forwarding_count =
        #{forwardingCount,jdbcType=INTEGER},
        comments_count =
        #{commentsCount,jdbcType=INTEGER},
        likes_count =
        #{likesCount,jdbcType=INTEGER},
        isDel = #{isdel,jdbcType=VARCHAR},
        isPublic = #{ispublic,jdbcType=VARCHAR},
        uid = #{uid,jdbcType=VARCHAR},
        content = #{content,jdbcType=LONGVARCHAR}
        where id =
        #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey"
            parameterType="com.springcloud.weibo.pojo.Message">
        update message
        set title = #{title,jdbcType=VARCHAR},
        topic_id = #{topicId,jdbcType=INTEGER},
        create_date =
        #{createDate,jdbcType=TIMESTAMP},
        forwarding_count =
        #{forwardingCount,jdbcType=INTEGER},
        comments_count =
        #{commentsCount,jdbcType=INTEGER},
        likes_count =
        #{likesCount,jdbcType=INTEGER},
        isDel = #{isdel,jdbcType=VARCHAR},
        isPublic = #{ispublic,jdbcType=VARCHAR},
        uid = #{uid,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>


    <!-- 用户自定义区 -->

    <resultMap id="MessageAndUserAndPictureResultMap"
               type="com.springcloud.weibo.pojo.Message" extends="ResultMapWithBLOBs">
        <association property="user"
                     javaType="com.springcloud.weibo.pojo.User"
                     resultMap="com.springcloud.weibo.mapper.UserMapper.UserAndHeadImgResultMap">
        </association>
        <!-- <collection property="pictures" ofType="com.springcloud.weibo.pojo.Picture"
            column="msg_id" resultMap="com.springcloud.weibo.mapper.PictureMapper.BaseResultMap">
            </collection> -->
    </resultMap>

    <select id="selectAllMessageByUid"
            parameterType="java.lang.String"
            resultMap="MessageAndUserAndPictureResultMap">
        select message.*, weibo_user.*, head_img.*
        from message, weibo_user, head_img
        where message.uid = weibo_user.uid
        and head_img.uid = weibo_user.uid
        and
        head_img.is_current_head = 'Y'
        and message.uid in (
        select
        focus_user.focus_uid
        from focus_user
        where focus_user.uid =
        #{uid,jdbcType=VARCHAR} )
        or message.uid = #{uid,jdbcType=VARCHAR}
        order by message.create_date desc
    </select>

    <select id="selectUserMessageByUid"
            parameterType="java.lang.String"
            resultMap="MessageAndUserAndPictureResultMap">
        select message.*, weibo_user.*, head_img.*
        from message, weibo_user, head_img
        where message.uid = weibo_user.uid
        and head_img.uid = weibo_user.uid
        and
        head_img.is_current_head = 'Y'
        and message.uid = #{uid,jdbcType=VARCHAR}
        order by message.create_date desc
    </select>

</mapper>